name: test

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'docs/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]

    steps:
    - name: Install gtest ubuntu & windows
      uses: MarkusJx/googletest-installer@v1.1
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest'
    - name: install g++-10 and gcc-10 ubuntu
      run: sudo apt-get install g++-10 gcc-10 -y
      if: matrix.os == 'ubuntu-latest'
    - name: install and gcc-10 macOs
      if: matrix.os == 'macOs-latest'
      run: brew install gcc@10
    - name: Install gtest macOs
      uses: MarkusJx/googletest-installer@v1.1
      if: matrix.os == 'macOs-latest'
      with:
        CC_path: /usr/local/bin/gcc-10
        CXX_path: /usr/local/bin/g++-10
    - uses: actions/checkout@v1
    - name: configure ubuntu
      run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Werror" . -B build
      if: matrix.os == 'ubuntu-latest'
      working-directory: test
      env:
        CC: '/usr/bin/gcc-10'
        CXX: '/usr/bin/g++-10'
    - name: configure macOs
      if: matrix.os == 'macOs-latest'
      working-directory: test
      run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Werror" . -B build
      env:
        CC: /usr/local/bin/gcc-10
        CXX: /usr/local/bin/g++-10
    - name: configure windows
      if: matrix.os == 'windows-latest'
      run: cmake . -B build
      working-directory: test
    - name: build unix
      run: cmake --build .
      working-directory: test/build
      if: matrix.os != 'windows-latest'
    - name: build windows
      if: matrix.os == 'windows-latest'
      run: cmake --build . --config Release
      working-directory: test/build
    - name: run test unix
      run: ./test
      working-directory: test/build
      if: matrix.os != 'windows-latest'
    - name: run test windows
      run: test.exe
      working-directory: test/build/Release
      if: matrix.os == 'windows-latest'
      shell: cmd
