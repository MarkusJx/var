name: test

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'docs/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]

    steps:
    # Install gtest. Based on: https://github.com/bastianhjaeger/github_actions_gtest_example
    - name: Install gtest ubuntu
      run: sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make && sudo cp *.a /usr/lib && sudo ln -s /usr/lib/libgtest.a /usr/local/lib/libgtest.a && sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/libgtest_main.a
      if: matrix.os == 'ubuntu-latest'
    - name: install g++-10 and gcc-10 ubuntu
      run: sudo apt-get install g++-10 gcc-10 -y
      if: matrix.os == 'ubuntu-latest'
    - name: install and gcc-10 macOs
      if: matrix.os == 'macOs-latest'
      run: brew install gcc@10 -y
    - uses: actions/checkout@v1
    - name: configure ubuntu
      run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Werror" . -B build
      if: matrix.os == 'ubuntu-latest'
      working-directory: test
      env:
        CC: '/usr/bin/gcc-10'
        CXX: '/usr/bin/g++-10'
    - name: configure macOs
      if: matrix.os == 'macOs-latest'
      working-directory: test
      run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Werror" . -B build
    - name: build
      run: cmake --build .
      working-directory: test/build
    - name: run test
      run: ./test
      working-directory: test/build
